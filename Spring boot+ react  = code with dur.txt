Spring boot+ react  = code with durgesh

Spring data jpa - for hibernate (dependency)
<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
=====================================

Long.parseLong(id)   -  parse string to long

@Requestmapping("/course") - by default it is get method 
======================

@Service                      // implementation  class for methods
public class CourseServiceIMPL implements CourseService {
===========================

- CourseServiceImpl - spring CRUD methods

package com.RestApiProject.ServiceLayer;

// Step 3
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.RestApiProject.DAOLayer.CourseDao;
import com.RestApiProject.Entities.Course;

@Service                      // implementation  class for methods
public class CourseServiceIMPL implements CourseService {
	
	
	@Autowired  // auto bean crreation 
	private CourseDao courseDao;
	
	
	
	@Override
	public List<Course> getCourses() {

	  List<Course>  getall = this.courseDao.findAll();
	  return getall;

	}

	@Override
	public Course getCourseById(long id) {
		
      Optional<Course>  opt =this.courseDao.findById(id);  //method of crudrepository return optional
		
      Course c1 = opt.get(); // give course object 

		return c1;
	}

	public Course createCourse(Course c1) {
		
		return	this.courseDao.save(c1);
				  
	}

	public Course update(Course c1) {
	
		return	this.courseDao.save(c1);
		
	}



	@Override
	public void deleteByID(long id) {
     
		// fetch object first then delete entire object
		
	  Optional<Course> opt= 	this.courseDao.findById(id);

	        Course c1 = opt.get();
	       
	      this.courseDao.delete(c1);  // delete object directly 
	
	}
	

}
=================================
application.properties file 
server.port=8080
spring.datasource.name=prajwal_21
spring.datasource.url=jdbc:mysql://localhost:3306/springboot_db
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root

#hibernate configuration :- auto table creation , show sql commands 
spring.jpa.hibernate.ddl-auto=update 
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect



